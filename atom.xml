<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sw_zl</title>
  
  <subtitle>只有懂得一些原理，才不会被这个时代甩开</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-14T02:38:15.826Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>三维中的小菜鸡</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>简单的推荐算法原理</title>
    <link href="http://example.com/2021/04/12/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/2021/04/12/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/</id>
    <published>2021-04-12T03:01:10.306Z</published>
    <updated>2021-04-14T02:38:15.826Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基于用户的推荐算法"><a href="#基于用户的推荐算法" class="headerlink" title="基于用户的推荐算法"></a>基于用户的推荐算法</h2><p><strong>基于用户的推荐算法是给A用户推荐与之兴趣相似的用户群B喜欢的商品而A用户没有的商品的集合</strong><br><span id="more"></span></p><h3 id="一-找到与A用户兴趣相似的用户群B"><a href="#一-找到与A用户兴趣相似的用户群B" class="headerlink" title="一. 找到与A用户兴趣相似的用户群B"></a><strong><em>一. 找到与A用户兴趣相似的用户群B</em></strong></h3><h4 id="1-计算用户之间的相似度"><a href="#1-计算用户之间的相似度" class="headerlink" title="1. 计算用户之间的相似度"></a>1. 计算用户之间的相似度</h4><p>余弦相似度：</p><script type="math/tex; mode=display">Wuv = \frac{|N(u)\bigcap N(v)|} {\sqrt{|N(u)|*|N(v)|}}</script><p>N(u)表示用户u所购买的物品集合，|N(u)|则是其购买物品数目，N(v)一样，对象是用户v</p><p>分母表示用户u和v购买相同物品的数量</p><p>余弦相似度的缺点： 时间复杂度是O(|V|*|U|)，这在用户数很大 时非常耗时</p><h4 id="2-用户u对物品i的感兴趣程度"><a href="#2-用户u对物品i的感兴趣程度" class="headerlink" title="2. 用户u对物品i的感兴趣程度"></a>2. 用户u对物品i的感兴趣程度</h4><p>得到用户之间的兴趣相似度后，UserCF算法 会给用户推荐和他兴趣最相似的K个用户喜欢的物品</p><p><img src="/.com//1.png" style="zoom:50%;"></p><p>r代表评分，在有评分的系统中它起到调整权重的作用，使得结果更加精准</p><p>（u,k）表示用户u的相似群体</p><h3 id="二-找到-B中用户喜欢的且A用户没有看见或买过的"><a href="#二-找到-B中用户喜欢的且A用户没有看见或买过的" class="headerlink" title="二. 找到 B中用户喜欢的且A用户没有看见或买过的"></a><strong><em>二. 找到 B中用户喜欢的且A用户没有看见或买过的</em></strong></h3><p>根据用户对物品的好感度分析，进行排序后即可生成排序列表，然后取需要的前n项推荐给用户</p><h2 id="基于物品的推荐算法"><a href="#基于物品的推荐算法" class="headerlink" title="基于物品的推荐算法"></a>基于物品的推荐算法</h2><p><strong>基于物品的推荐算法是给A用户推荐与他之前喜欢的物品相似度高的物品的集合 </strong></p><h4 id="由于UserCF的缺陷"><a href="#由于UserCF的缺陷" class="headerlink" title="由于UserCF的缺陷"></a>由于UserCF的缺陷</h4><p>稀疏性：前期很难发现相似的用户</p><p>扩展性：随着网站的用户数目越来越大，计算用户兴趣相似度矩阵将越来越困难，其运算时间复杂度和空间复杂度的增长和用户数的增长近似于平方关系</p><h4 id="一-计算物品之间的相似度"><a href="#一-计算物品之间的相似度" class="headerlink" title="一. 计算物品之间的相似度"></a><strong><em>一. 计算物品之间的相似度</em></strong></h4><ol><li><h5 id="计算物品i和j之间的相似度"><a href="#计算物品i和j之间的相似度" class="headerlink" title="计算物品i和j之间的相似度"></a>计算物品i和j之间的相似度</h5><p><img src="/.com//2.png" style="zoom:50%;"><img src="/.com//3.png" alt></p><p>|N(i)|是喜欢物品i的用户数，分子是同时喜欢物品i和物品j的用户</p><p>喜欢物品i的用户中有多少比 例的用户也喜欢物品j</p><p>如果j很热门，会导致Wij会很大，会导致如何物品和这个热门物品都会有很大的相似度，可以改进：</p><p><img src="/.com//2.png" style="zoom:50%;"><img src="/.com//3.png" alt></p><ol><li><h5 id="计算用户对物品的感兴趣程度"><a href="#计算用户对物品的感兴趣程度" class="headerlink" title="计算用户对物品的感兴趣程度"></a>计算用户对物品的感兴趣程度</h5><p><img src="/.com//4.png" style="zoom:50%;"></p></li></ol><p>N(u)是用户喜欢的物品的集合，S(j,K)是 和物品j最相似的K个物品的集合，r ui是用户u对物品i的兴趣程度</p></li></ol><h4 id="二-根据物品的相似度和用户的历史行为给-用户生成推荐列表"><a href="#二-根据物品的相似度和用户的历史行为给-用户生成推荐列表" class="headerlink" title="二. 根据物品的相似度和用户的历史行为给 用户生成推荐列表"></a><strong><em>二. 根据物品的相似度和用户的历史行为给 用户生成推荐列表</em></strong></h4><p>根据用户对物品的感兴趣程度分析，进行排序后即可生成排序列表，然后取需要的前n项推荐给用户</p><h2 id="隐语义模型"><a href="#隐语义模型" class="headerlink" title="隐语义模型"></a>隐语义模型</h2><h3 id="由于UserCF和ItemCF的缺陷："><a href="#由于UserCF和ItemCF的缺陷：" class="headerlink" title="由于UserCF和ItemCF的缺陷："></a>由于UserCF和ItemCF的缺陷：</h3><ul><li>内存消耗过大</li><li>由于UserCF和ItemCF忽略了物品种类和用户之间的关系，导致了推荐算法的复杂性的提升和准确性的降低</li></ul><h3 id="隐语义模型：LFM"><a href="#隐语义模型：LFM" class="headerlink" title="隐语义模型：LFM"></a>隐语义模型：LFM</h3><p>隐语义模型注意要是通过物品隐含的特征属性来确定用户感兴趣的商品和商品的联系</p><h3 id="主要解决的问题："><a href="#主要解决的问题：" class="headerlink" title="主要解决的问题："></a>主要解决的问题：</h3><ol><li><p>计算机如何进行物品的分类？    </p><p><strong>机器学习聚类算法</strong></p></li><li><p>如何确定用户对物品类别的感兴趣程度？</p><p><strong>兴趣矩阵 = 用户和类别的矩阵*物品占类别的权重</strong></p></li><li><p>如果给一个类给计算机，计算机如何选择这个类中的物品推荐给用户，并且确定物品在这个类的权重。</p></li></ol><h3 id="负样本采样"><a href="#负样本采样" class="headerlink" title="负样本采样"></a>负样本采样</h3><p>用户的行为分为两种：显性行为，隐性行为</p><p>显性行为主要是用户点击了什么也就是用户喜欢的商品，这就是正样本</p><p>隐性行为主要是用户隐性表现出来的，可以理解为用户不喜欢什么商品，例如点击了什么不推荐或者不感兴趣等等，这就是负样本</p><p>对于用户，要保持正负样本平衡</p><h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3><p>按照物品的流行度采样出了那些热门的、但 用户却没有过行为的物品。经过采样，可以 得到一个用户—物品集 K {( u,i )} ，其中如果 (u, i)是正样本，则有 R ui = 1，否则有 R ui = 0. 然后，需要优化如下的损失函数来找到最合 适的参数p和q：</p><p><img src="/.com//5.png" style="zoom:50%;"></p><p>损失函数最小化过程中获得参数</p><p>损失函数的优化用随机梯度下降法，通过求参数的偏导数找到 最速下降方向，然后通过迭代法不断地优化参 数</p><p><img src="/.com//6.png" style="zoom:50%;"></p><p>根据随机梯度下降法，需要将参数沿着最速下 降方向向前推进</p><p><img src="/.com//7.png" style="zoom:50%;"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;基于用户的推荐算法&quot;&gt;&lt;a href=&quot;#基于用户的推荐算法&quot; class=&quot;headerlink&quot; title=&quot;基于用户的推荐算法&quot;&gt;&lt;/a&gt;基于用户的推荐算法&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;基于用户的推荐算法是给A用户推荐与之兴趣相似的用户群B喜欢的商品而A用户没有的商品的集合&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/04/08/hello-world/"/>
    <id>http://example.com/2021/04/08/hello-world/</id>
    <published>2021-04-08T12:35:55.670Z</published>
    <updated>2021-04-14T01:52:46.102Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
